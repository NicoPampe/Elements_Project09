class Menu {

    field int up,down,left,right,enter;

    constructor Menu new(){
        let up = 131;
        let down = 133;
        return this;
    }
    method void drawStatic() {

        do Output.println();
        do Output.printString("                      Snake Game");


        do Screen.setColor(true);
        do Screen.drawRectangle(160,120,352,220);

        do Screen.setColor(false);
        do Screen.drawRectangle(224,128,288,144);
        do Screen.drawRectangle(224,162,288,178);
        do Screen.drawRectangle(224,192,288,212); 

        do Output.println();
        do Output.println();
        do Output.println();
        do Output.println();
        do Output.println();
        do Output.println();
        do Output.println();
        do Output.println();
        do Output.println();
        do Output.println();
        do Output.println();
        do Output.printString("                              Play");

        do Output.println();
        do Output.println();
        do Output.println();
        do Output.printString("                             Options");

        do Output.println();
        do Output.println();
        do Output.println();
        do Output.printString("                             Score");

        do Screen.setColor(true);
        do Screen.drawRectangle(160,120,224,220);

	return;

    }

    method void drawDynamic(int pos){
        var int x, y, size;
        let x = 400;
        let y = pos * 32;
        let y = y + 120;
        let size = 32;
        do Screen.setColor(false);
        do Screen.drawRectangle(x,120,x+size, 220);

        do Screen.setColor(true);
        do Screen.drawRectangle(x,y,x+size, y+size);
	return;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void run(){
        var int debounce, pos, key;
        let debounce = 0;
        let pos = 0;
        do drawStatic();
        while (true){
            let key = Keyboard.keyPressed();
            if (debounce = 0) {
                let debounce = 1;
                if (key = up) {
                    if (pos > 0){
                        let pos = pos - 1;
                    }
                }

                if (key = down) {
                    if (pos < 2){
                        let pos = pos + 1;
                    }
                }
            }
            if (key = 0){
                let debounce = 0;
            }
            do drawDynamic(pos);
        }
        return;
    }
}
