class Body{
	
	field Square body;
	field Body nextBody;

	constructor Body new(int x, int y, int size){
		let body = Square.new(x, y, size);
		return this;
	}

	method void dispose(){
		do body.dispose();
		if( ~(nextBody = null) ){
			do nextBody.dispose();
		}
		do Memory.deAlloc(this);
		return;
	}
	
	method void moveTo( int Ax, int Ay ){
		var int tempX, tempY;
		do body.erase();
		let tempX = body.getX();
		let tempY = body.getY();
		do body.setX( Ax );
		do body.setY( Ay );
		if( ~(nextBody = null) ){
			do nextBody.moveTo( tempX, tempY );
		}
		do body.draw();
		return;	
	}

	method void addBody(){
		if( nextBody = null ){	
			let nextBody = Body.new( body.getX(), body.getY(), body.getSize() );
		}
		else{
			do nextBody.addBody();
		}
		return;
	}
	
	method bool isBodyCollision(int Ax, int Ay){
		if( squareCollision(Ax, Ay) ){
			return true;
		}
		if( nextBody = null ){
			return false;
		}
		else {
			return nextBody.isBodyCollision(Ax, Ay);
		}
	}
	
	method bool squareCollision(int Ax, int Ay){
		var boolean w, x, y, z;
        let w = false;
        let x = false;
		let y = false;
		let z = false;
		
		if( ((body.getX() - Ax ) < 10 ) & ((body.getY() - Ay ) < 10 )){
			let w = true;
		}
		if( ((Ax - body.getX() ) < 10 ) & ((body.getY() - Ay ) < 10 )){
			let x = true;
		}
		if( ((body.getX() - Ax ) < 10 ) & ((Ay - body.getY() ) < 10 )){
			let y = true;
		}
		if( ((Ax - body.getX() ) < 10 ) & ((Ay - body.getY() ) < 10 )){
			let z = true;
		}
		return w & x & y & z;
	}
}
